parcelRequire = (function (e) { const r = typeof parcelRequire === 'function' && parcelRequire; const n = typeof require === 'function' && require; let i = {}; function u(e, u) { if (e in i) return i[e]; const t = typeof parcelRequire === 'function' && parcelRequire; if (!u && t) return t(e, !0); if (r) return r(e, !0); if (n && typeof e === 'string') return n(e); const o = new Error(`Cannot find module '${e}'`); throw o.code = 'MODULE_NOT_FOUND', o; } return u.register = function (e, r) { i[e] = r; }, i = e(u), u.modules = i, u; }((require) => {
  let a = {}; a = {
    'React lifecycle methods diagram': 'Diagram metod lifecycle w React', Options: 'Opcje', 'Show less common lifecycles': 'Poka\u017C rzadziej u\u017Cywane metody', 'React version': 'Wersja React', Language: 'J\u0119zyk', Mounting: 'Montowanie', Updating: 'Aktualizacja', Unmounting: 'Odmontowanie', Phases: 'Fazy', '\u201C{name} phase\u201D': '\u201CFaza {name}\u201D', 'Pure and has no side effects. May be paused, aborted or restarted by React.': 'Czysta i bez efekt\xF3w ubocznych. Mo\u017Ce zosta\u0107 wstrzymana, anulowana lub zrestartowana przez React.', 'Can read the DOM.': 'Mo\u017Ce czyta\u0107 DOM.', 'Can work with DOM, run side effects, schedule updates.': 'Mo\u017Ce operowa\u0107 na DOM, tworzy\u0107 efekty uboczne i kolejkowa\u0107 aktualizacje.', 'React updates DOM and refs': 'React aktualizuje DOM i referencje', 'Read docs for {name} (opens in a new tab)': 'Przeczytaj dokumentacj\u0119 do metody {name} (link otwiera si\u0119 w nowej karcie)', "See project's page on GitHub (opens in a new tab)": 'Otw\xF3rz stron\u0119 projektu na GitHub (link otwiera si\u0119 w nowej karcie)', 'See project on': 'Otw\xF3rz stron\u0119 projektu na',
  }; if (typeof exports === 'object' && typeof module !== 'undefined') { module.exports = a; } else if (typeof define === 'function' && define.amd) { define(() => a); } return { I4Qf: a };
}));
