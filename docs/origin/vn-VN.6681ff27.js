parcelRequire = (function (e) { const r = typeof parcelRequire === 'function' && parcelRequire; const n = typeof require === 'function' && require; let i = {}; function u(e, u) { if (e in i) return i[e]; const t = typeof parcelRequire === 'function' && parcelRequire; if (!u && t) return t(e, !0); if (r) return r(e, !0); if (n && typeof e === 'string') return n(e); const o = new Error(`Cannot find module '${e}'`); throw o.code = 'MODULE_NOT_FOUND', o; } return u.register = function (e, r) { i[e] = r; }, i = e(u), u.modules = i, u; }((require) => {
  let a = {}; a = {
    'React lifecycle methods diagram': 'M\xF4 h\xECnh v\xF2ng \u0111\u1EDDi c\u1EE7a React', Options: 'L\u1EF1a ch\u1ECDn', 'Show less common lifecycles': 'Hi\u1EC3n th\u1ECB nh\u1EEFng v\xF2ng \u0111\u1EDDi \xEDt \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng c\u1EE7a React', 'React version': 'Phi\xEAn b\u1EA3n c\u1EE7a React', Language: 'Ng\xF4n ng\u1EEF', Mounting: 'Qu\xE1 tr\xECnh g\u1EAFn k\u1EBFt', Updating: 'Qu\xE1 tr\xECnh c\u1EADp nh\u1EADt', Unmounting: 'Qu\xE1 tr\xECnh t\xE1ch tr\u1EDDi', '\u201C{name} phase\u201D': 'Giai \u0111o\u1EA1n {name}\u201D', 'Pure and has no side effects. May be paused, aborted or restarted by React.': 'Kh\xF4ng c\xF3 t\xE1c d\u1EE5ng ph\u1EE5, C\xF3 th\u1EC3 t\u1EA1m d\u1EEBng, h\u1EE7y ho\u1EB7c kh\u1EDFi \u0111\u1ED9ng l\u1EA1i b\u1EDFi React', 'Can read the DOM.': 'C\xF3 th\u1EC3 \u0111\u1ECDc \u0111\u1ED1i t\u01B0\u1EE3ng DOM.', 'Can work with DOM, run side effects, schedule updates.': 'C\xF3 th\u1EC3 l\xE0m vi\u1EC7c v\u1EDBi \u0111\u1ED1i t\u01B0\u1EE3ng DOM, ch\u1EA1y c\xE1c t\xE1c v\u1EE5 ph\u1EE5, c\u1EADp nh\u1EADt theo l\u1ECBch', 'React updates DOM and refs': 'React c\u1EADp nh\u1EADt \u0111\u1ED1i t\u01B0\u1EE3ng DOM v\xE0 ref', 'Read docs for {name} (opens in a new tab)': '\u0110\u1ECDc t\xE0i li\u1EC7u cho {name} (m\u1EDF trong tab m\u1EDBi)', "See project's page on GitHub (opens in a new tab)": 'Xem d\u1EF1 \xE1n t\u1EA1i Github (m\u1EDF trong tab m\u1EDBi)', 'See project on': 'Xem d\u1EF1 \xE1n t\u1EA1i',
  }; if (typeof exports === 'object' && typeof module !== 'undefined') { module.exports = a; } else if (typeof define === 'function' && define.amd) { define(() => a); } return { IKpF: a };
}));
