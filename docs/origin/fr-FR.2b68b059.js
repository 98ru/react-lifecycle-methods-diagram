parcelRequire = (function (e) { const r = typeof parcelRequire === 'function' && parcelRequire; const n = typeof require === 'function' && require; let i = {}; function u(e, u) { if (e in i) return i[e]; const t = typeof parcelRequire === 'function' && parcelRequire; if (!u && t) return t(e, !0); if (r) return r(e, !0); if (n && typeof e === 'string') return n(e); const o = new Error(`Cannot find module '${e}'`); throw o.code = 'MODULE_NOT_FOUND', o; } return u.register = function (e, r) { i[e] = r; }, i = e(u), u.modules = i, u; }((require) => {
  let a = {}; a = {
    'React lifecycle methods diagram': 'Diagramme de cycle de vie des m\xE9thodes React', Options: 'Options', 'Show less common lifecycles': 'Montrer les cycles de vie moins courants', 'React version': 'Version de React', Language: 'Langue', Mounting: 'Montage', Updating: 'Mise \xE0 jour', Unmounting: 'D\xE9montage', '\u201C{name} phase\u201D': '\u201CPhase de {name}\u201D', 'Pure and has no side effects. May be paused, aborted or restarted by React.': 'M\xE9thodes pures, sans effets secondaires. Peuvent \xEAtre interrompues, annul\xE9es  ou red\xE9marr\xE9es par React.', 'Can read the DOM.': 'Peuvent lire le DOM.', 'Can work with DOM, run side effects, schedule updates.': 'Peuvent op\xE9rer sur le DOM, engendrer des effets secondaires, programmer des mise \xE0 jour.', 'React updates DOM and refs': 'React met \xE0 jour le DOM et les refs', 'Read docs for {name} (opens in a new tab)': "Lire la documentation pour {name} (s'ouvre dans un nouvel onglet)", "See project's page on GitHub (opens in a new tab)": "Acc\xE9der \xE0 la page du projet sur GitHub (s'ouvre dans un nouvel onglet)", 'See project on': 'Voir le projet sur',
  }; if (typeof exports === 'object' && typeof module !== 'undefined') { module.exports = a; } else if (typeof define === 'function' && define.amd) { define(() => a); } return { fUMr: a };
}));
