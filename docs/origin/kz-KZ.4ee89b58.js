parcelRequire = (function (e) { const r = typeof parcelRequire === 'function' && parcelRequire; const n = typeof require === 'function' && require; let i = {}; function u(e, u) { if (e in i) return i[e]; const t = typeof parcelRequire === 'function' && parcelRequire; if (!u && t) return t(e, !0); if (r) return r(e, !0); if (n && typeof e === 'string') return n(e); const o = new Error(`Cannot find module '${e}'`); throw o.code = 'MODULE_NOT_FOUND', o; } return u.register = function (e, r) { i[e] = r; }, i = e(u), u.modules = i, u; }((require) => {
  let a = {}; a = {
    'React lifecycle methods diagram': 'React komponent\u0456n\u0456\u0144 \xF3m\u0456rl\u0456k ts\u0131kl\u0456 \xE1d\u0456ster\u0456n\u0456\u0144 d\u0131agrammasy', Options: 'Opts\u0131ialar', 'Show less common lifecycles': '\xD3m\u0456rl\u0456k ts\u0131kldy\u0144 az qoldanylatyn \xE1d\u0456ster\u0456n k\xF3rset\xFD', 'React version': 'React nusqasy', Language: 'Til', Mounting: 'Montajda\xFD', Updating: 'Ja\u0144ar\xFD', Unmounting: 'Keri montajda\xFD', '\u201C{name} phase\u201D': '\u201C{name} keze\u0144i\u201D', 'Pure and has no side effects. May be paused, aborted or restarted by React.': 'Taza j\xE1ne janama \xE1serler\u0456 joq. React \xF3z\u0456 toqtata, \xF3sh\u0456re nemese qa\u0131ta basta\u0131 alady.', 'Can read the DOM.': 'DOM-dy oq\xFD\u01F5a bolady.', 'Can work with DOM, run side effects, schedule updates.': 'Janama \xE1serlerd\u0456 jasap, ja\u0144art\xFDlardy ta\u01F5a\u0131yndap, DOM-men jumys \u0456ste\xFDge bolady.', 'React updates DOM and refs': 'React - DOM men refterd\u0456 ja\u0144artady', 'Read docs for {name} (opens in a new tab)': '{name} \xFAsh\u0456n qujatty qara\xFD (ja\u0144a qo\u0131yndyda ashylady)', "See project's page on GitHub (opens in a new tab)": 'GitHub jobasyny\u0144 paraqshasyna k\u0456r\u0456\u0144\u0456z (ja\u0144a qo\u0131yndyda ashylady)', 'See project on': 'Jobany qara\u0144yz',
  }; if (typeof exports === 'object' && typeof module !== 'undefined') { module.exports = a; } else if (typeof define === 'function' && define.amd) { define(() => a); } return { K8Ml: a };
}));
